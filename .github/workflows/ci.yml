name: SecurityPipeline

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:

jobs:
  secret-scan:
    name: Gitleaks-proxy
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: üì• Clone SecretScan repo (Dockerfile + rules)
        run: |
          git clone --branch dockerwithrules https://github.com/PoorneshORG/SecretScan.git secret-scan

      - name: üõ†Ô∏è Build Gitleaks Docker image with custom rules
        run: |
          docker build -t gitleaks-custom -f secret-scan/Dockerfile secret-scan

      - name: üîç Run Gitleaks - custom rules (output to JSON)
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            gitleaks-custom detect \
              --source=/app \
              --config=/app/secret-scan/rules.toml \
              --report-format=json \
              --report-path=gitleaks-report.json \
              --no-git \
              --verbose \
              --exit-code 0 || true

      - name: üì§ Upload Gitleaks findings to DefectDojo
        if: always()
        env:
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_PRODUCT_NAME: DevSecOps
        run: |
          chmod +x scripts/upload_to_defectdojo.sh
          ./scripts/upload_to_defectdojo.sh \
            "$DEFECTDOJO_URL" \
            "$DEFECTDOJO_API_KEY" \
            "$DEFECTDOJO_PRODUCT_NAME" \
            "gitleaks-report.json" \
            "${{ github.repository }}-${{ github.ref_name }}"
